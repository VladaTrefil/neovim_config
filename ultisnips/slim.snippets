# ────────────────────────────────────────────────────────────────────────────────────────────────────
#   Reference: {{{

# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

#   }}}
# ────────────────────────────────────────────────────────────────────────────────────────────────────

#           ___
#          /\_ \    __
#      ____\//\ \  /\_\    ___ ___
#     /',__\ \ \ \ \/\ \ /' __` __`\
#    /\__, `\ \_\ \_\ \ \/\ \/\ \/\ \
#    \/\____/ /\____\\ \_\ \_\ \_\ \_\
#     \/___/  \/____/ \/_/\/_/\/_/\/_/
#


priority -50

snippet ? "present?"
.present?
endsnippet

snippet model[ "Cell model"
model[${1::${2}}]
endsnippet

snippet options[ "Cell options"
options[:${1}]
endsnippet

snippet cell "Folio Cell" b
== cell('${1}', ${2}${3:, ${4}: ${5}})
endsnippet

snippet t "Folio Cell" b
= t('.${1}')
endsnippet

snippet icon "Icon" b
= icon("${1}", height: ${2}${3:, class: '${4}'})
endsnippet

snippet image "Image" b
= image(${1:model[:cover]}, ${2:THUMB_SIZE}${3:, class: '${4}'})
endsnippet

snippet button "Button" b
button.btn${1:.btn-lg} type="${2:button}"
	${0}
endsnippet

snippet if "if" b
- if ${1}
	${0}
endsnippet

snippet ifel "if else" b
- if ${1}
	${2}
- else
	${3}
endsnippet

snippet ifelif "if else if" b
- if ${1}
	${2}
- elsif ${3}
	${4}
endsnippet

snippet unless "unless" b
- unless ${1}
	${0}
endsnippet

snippet unlessel "unless else" b
- unless ${1}
	${2}
- else
	${3}
endsnippet

snippet each "Each loop" b
- ${1}.each do |${2}|
	${0}
endsnippet

snippet eachwi "Each loop" b
- ${1}.each_with_index do |${2}, i|
	${0}
endsnippet

snippet pry "binding pry"
require "pry"; binding.pry
endsnippet

snippet stim:target "Stimulus"
stimulus_target(${0})
endsnippet

snippet stim:action "Stimulus"
stimulus_action(${0})
endsnippet

snippet stim:controller "Stimulus"
stimulus_controller("${0}")
endsnippet

snippet btn "Button" b
a.btn.btn-${1:primary} href=${2}
	${0}
endsnippet
